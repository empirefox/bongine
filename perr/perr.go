// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error.proto

/*
Package perr is a generated protocol buffer package.

It is generated from these files:
	error.proto

It has these top-level messages:
	CodeError
	FieldError
	Error
*/
package perr

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *must sync with ng-ef-sand
type ErrorParser int32

const (
	ErrorParser_Code ErrorParser = 0
	// *similar to go-playground/validator v9
	ErrorParser_FieldArray ErrorParser = 1
	// *asaskevich/govalidator v4
	ErrorParser_OneLineFields ErrorParser = 2
)

var ErrorParser_name = map[int32]string{
	0: "Code",
	1: "FieldArray",
	2: "OneLineFields",
}
var ErrorParser_value = map[string]int32{
	"Code":          0,
	"FieldArray":    1,
	"OneLineFields": 2,
}

func (x ErrorParser) String() string {
	return proto.EnumName(ErrorParser_name, int32(x))
}
func (ErrorParser) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// *go code first
type CodeError struct {
	Group uint32 `protobuf:"varint,1,opt,name=Group,json=group" json:"Group,omitempty"`
	Code  uint32 `protobuf:"varint,2,opt,name=Code,json=code" json:"Code,omitempty"`
}

func (m *CodeError) Reset()                    { *m = CodeError{} }
func (m *CodeError) String() string            { return proto.CompactTextString(m) }
func (*CodeError) ProtoMessage()               {}
func (*CodeError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CodeError) GetGroup() uint32 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *CodeError) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

type FieldError struct {
	// *map is provided by js, grouped by struct
	Field uint32 `protobuf:"varint,1,opt,name=Field,json=field" json:"Field,omitempty"`
	// *only use one set of tag!
	Tag uint32 `protobuf:"varint,2,opt,name=Tag,json=tag" json:"Tag,omitempty"`
	// *map is provided by js, grouped by struct
	Param uint32 `protobuf:"varint,3,opt,name=Param,json=param" json:"Param,omitempty"`
}

func (m *FieldError) Reset()                    { *m = FieldError{} }
func (m *FieldError) String() string            { return proto.CompactTextString(m) }
func (*FieldError) ProtoMessage()               {}
func (*FieldError) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FieldError) GetField() uint32 {
	if m != nil {
		return m.Field
	}
	return 0
}

func (m *FieldError) GetTag() uint32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *FieldError) GetParam() uint32 {
	if m != nil {
		return m.Param
	}
	return 0
}

type Error struct {
	// *must sync with ng-ef-sand
	Parser uint32        `protobuf:"varint,1,opt,name=Parser,json=parser" json:"Parser,omitempty"`
	Code   *CodeError    `protobuf:"bytes,2,opt,name=Code,json=code" json:"Code,omitempty"`
	Fields []*FieldError `protobuf:"bytes,3,rep,name=Fields,json=fields" json:"Fields,omitempty"`
	// *
	// asaskevich/govalidator.v4 error.Error()
	// go-playground/validator.v9
	Err string `protobuf:"bytes,7,opt,name=Err,json=err" json:"Err,omitempty"`
}

func (m *Error) Reset()                    { *m = Error{} }
func (m *Error) String() string            { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()               {}
func (*Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Error) GetParser() uint32 {
	if m != nil {
		return m.Parser
	}
	return 0
}

func (m *Error) GetCode() *CodeError {
	if m != nil {
		return m.Code
	}
	return nil
}

func (m *Error) GetFields() []*FieldError {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *Error) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*CodeError)(nil), "perr.CodeError")
	proto.RegisterType((*FieldError)(nil), "perr.FieldError")
	proto.RegisterType((*Error)(nil), "perr.Error")
	proto.RegisterEnum("perr.ErrorParser", ErrorParser_name, ErrorParser_value)
}

func init() { proto.RegisterFile("error.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0xcd, 0xa6, 0x8d, 0xee, 0x94, 0xd5, 0x38, 0x88, 0xe4, 0x58, 0xea, 0xa5, 0x78, 0xe8,
	0x61, 0xc5, 0x8b, 0x37, 0x91, 0x55, 0x10, 0xc1, 0xa5, 0xf8, 0x02, 0xd1, 0x8e, 0x65, 0x41, 0x37,
	0x61, 0xba, 0x1e, 0xbc, 0xf9, 0xe8, 0x92, 0xa4, 0xd6, 0x3d, 0xfe, 0xc9, 0x37, 0xf3, 0x7f, 0x09,
	0x14, 0xc4, 0xec, 0xb8, 0xf1, 0xec, 0x76, 0x0e, 0x33, 0x4f, 0xcc, 0xd5, 0x35, 0xcc, 0xef, 0x5c,
	0x47, 0xab, 0x70, 0x81, 0x67, 0x90, 0x3f, 0xb0, 0xfb, 0xf2, 0x46, 0x94, 0xa2, 0x5e, 0xb4, 0x79,
	0x1f, 0x02, 0x22, 0x64, 0x01, 0x31, 0xb3, 0x78, 0x98, 0xbd, 0xb9, 0x8e, 0xaa, 0x47, 0x80, 0xfb,
	0x0d, 0x7d, 0x74, 0xd3, 0x5c, 0x4c, 0x7f, 0x73, 0xef, 0x21, 0xa0, 0x06, 0xf9, 0x62, 0xfb, 0x71,
	0x4c, 0xee, 0x6c, 0x1f, 0xb8, 0xb5, 0x65, 0xfb, 0x69, 0x64, 0xe2, 0x7c, 0x08, 0xd5, 0x8f, 0x80,
	0x3c, 0xed, 0x39, 0x07, 0xb5, 0xb6, 0x3c, 0x10, 0x8f, 0x8b, 0x94, 0x8f, 0x09, 0x2f, 0xf6, 0x0c,
	0x8a, 0xe5, 0x49, 0x13, 0xcc, 0x9b, 0x49, 0x3b, 0x29, 0x61, 0x0d, 0x2a, 0x4a, 0x0c, 0x46, 0x96,
	0xb2, 0x2e, 0x96, 0x3a, 0x61, 0xff, 0x9a, 0xad, 0x8a, 0x5e, 0x43, 0x10, 0x5b, 0x31, 0x9b, 0xc3,
	0x52, 0xd4, 0xf3, 0x56, 0x12, 0xf3, 0xe5, 0x0d, 0x14, 0x11, 0x49, 0xed, 0x78, 0x94, 0xfa, 0xf4,
	0x01, 0x1e, 0x8f, 0xef, 0xbc, 0x65, 0xb6, 0xdf, 0x5a, 0xe0, 0x29, 0x2c, 0x9e, 0xb7, 0xf4, 0xb4,
	0xd9, 0x52, 0xea, 0xd2, 0xb3, 0x57, 0x15, 0xbf, 0xf3, 0xea, 0x37, 0x00, 0x00, 0xff, 0xff, 0x5d,
	0x2a, 0xed, 0x24, 0x5d, 0x01, 0x00, 0x00,
}
